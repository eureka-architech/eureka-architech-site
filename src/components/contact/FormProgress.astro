---
export interface Props {
  totalSteps: number;
  currentStep?: number;
}

const { totalSteps, currentStep = 1 } = Astro.props;
const steps = Array.from({ length: totalSteps }, (_, i) => i + 1);
---

<div class="progress-container modern-progress">
  <!-- Visual Step Indicators -->
  <div class="step-indicators">
    {steps.map((step) => (
      <div class="step-wrapper" data-step={step}>
        <div class={`step-dot ${step === currentStep ? 'active' : ''} ${step < currentStep ? 'completed' : ''}`}>
          {step < currentStep && (
            <svg class="checkmark" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
            </svg>
          )}
        </div>
        {step < totalSteps && <div class={`step-line ${step < currentStep ? 'completed' : ''}`}></div>}
      </div>
    ))}
  </div>
  
  <!-- Enhanced Progress Bar -->
  <div class="progress-bar-wrapper">
    <div class="progress-bar">
      <div id="progressFill" class="progress-fill" style={`--progress: ${(currentStep / totalSteps)}`}>
        <div class="progress-glow"></div>
      </div>
    </div>
    <div class="progress-particles"></div>
  </div>
  
  <!-- Step Labels -->
  <div class="step-labels">
    <div class="current-step-label">
      <span class="step-number">Paso <span id="currentStep">{currentStep}</span></span>
      <span class="step-name" id="stepName">Información Básica</span>
    </div>
    <div class="progress-percentage">
      <span id="progressPercent">{Math.round((currentStep / totalSteps) * 100)}%</span>
      <span class="progress-label">Completado</span>
    </div>
  </div>
</div>

<style>
  @import '../../styles/form-animations.css';
  
  .progress-container {
    margin-bottom: 2rem;
    position: relative;
  }
  
  .modern-progress {
    --step-color-inactive: rgba(255, 255, 255, 0.1);
    --step-color-active: var(--accent-500);
    --step-color-completed: var(--accent-500);
  }
  
  /* Step Indicators */
  .step-indicators {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 1.5rem;
    position: relative;
    z-index: 2;
  }
  
  .step-wrapper {
    display: flex;
    align-items: center;
    flex: 1;
  }
  
  .step-wrapper:last-child {
    flex: 0;
  }
  
  .step-dot {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    background: var(--step-color-inactive);
    border: 2px solid transparent;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 0.875rem;
    font-weight: 600;
    color: var(--text-secondary);
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    cursor: pointer;
    position: relative;
    z-index: 2;
  }
  
  .step-dot::before {
    content: attr(data-step);
    position: absolute;
    font-size: 0.75rem;
    color: var(--text-muted);
  }
  
  .step-dot.active {
    background: linear-gradient(135deg, var(--accent-500), var(--secondary-500));
    border-color: rgba(0, 242, 169, 0.3);
    color: var(--primary-900);
    transform: scale(1.1);
    box-shadow: 
      0 0 0 8px rgba(0, 242, 169, 0.1),
      0 8px 24px rgba(0, 242, 169, 0.3);
  }
  
  .step-dot.active::before {
    display: none;
  }
  
  .step-dot.completed {
    background: var(--step-color-completed);
    border-color: rgba(0, 242, 169, 0.2);
    color: var(--primary-900);
  }
  
  .step-dot.completed::before {
    display: none;
  }
  
  .checkmark {
    width: 20px;
    height: 20px;
    animation: successPulse 0.4s ease-out;
  }
  
  .step-line {
    flex: 1;
    height: 2px;
    background: var(--step-color-inactive);
    margin: 0 0.5rem;
    transition: all 0.4s ease;
    position: relative;
    overflow: hidden;
  }
  
  .step-line.completed {
    background: var(--step-color-completed);
  }
  
  .step-line.completed::after {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
    animation: shimmer 1s ease-out;
  }
  
  /* Enhanced Progress Bar */
  .progress-bar-wrapper {
    position: relative;
    margin-bottom: 1.5rem;
  }
  
  .progress-bar {
    height: 6px;
    background: rgba(255, 255, 255, 0.05);
    border-radius: 3px;
    overflow: hidden;
    position: relative;
    backdrop-filter: blur(10px);
  }
  
  .progress-fill {
    height: 100%;
    background: linear-gradient(90deg, var(--accent-500), var(--secondary-500));
    transform-origin: left center;
    transform: scaleX(var(--progress));
    transition: transform 0.6s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    overflow: hidden;
  }
  
  .progress-glow {
    position: absolute;
    top: 0;
    right: 0;
    width: 50px;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.6));
    animation: shimmer 2s infinite;
  }
  
  .progress-particles {
    position: absolute;
    top: -10px;
    left: 0;
    right: 0;
    height: 20px;
    pointer-events: none;
  }
  
  /* Step Labels */
  .step-labels {
    display: flex;
    justify-content: space-between;
    align-items: center;
    animation: fadeInSequence 0.6s ease-out;
    animation-delay: 0.3s;
    animation-fill-mode: both;
  }
  
  .current-step-label {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }
  
  .step-number {
    font-size: 0.875rem;
    color: var(--text-secondary);
    font-weight: 500;
  }
  
  .step-number #currentStep {
    color: var(--accent-500);
    font-weight: 700;
  }
  
  .step-name {
    font-size: 1.125rem;
    font-weight: 600;
    color: var(--text-primary);
    letter-spacing: -0.02em;
  }
  
  .progress-percentage {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    gap: 0.25rem;
  }
  
  #progressPercent {
    font-size: 1.5rem;
    font-weight: 700;
    background: linear-gradient(135deg, var(--accent-500), var(--secondary-500));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    line-height: 1;
  }
  
  .progress-label {
    font-size: 0.75rem;
    color: var(--text-muted);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }
  
  /* Hover Effects */
  .step-dot:not(.active):not(.completed):hover {
    background: rgba(255, 255, 255, 0.15);
    transform: scale(1.05);
  }
  
  /* Mobile Optimization */
  @media (max-width: 640px) {
    .step-dot {
      width: 32px;
      height: 32px;
    }
    
    .step-line {
      margin: 0 0.25rem;
    }
    
    .step-labels {
      flex-direction: column;
      align-items: flex-start;
      gap: 1rem;
    }
    
    .progress-percentage {
      align-items: flex-start;
    }
  }
  
  /* Reduced Motion */
  @media (prefers-reduced-motion: reduce) {
    .step-dot,
    .step-line,
    .progress-fill,
    .progress-glow {
      animation: none;
      transition: none;
    }
  }
</style>