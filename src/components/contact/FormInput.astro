---
export interface Props {
  label: string;
  name: string;
  type?: 'text' | 'email' | 'tel' | 'number' | 'password' | 'search' | 'url';
  placeholder?: string;
  required?: boolean;
  icon?: string;
  autoComplete?: string;
}

const { label, name, type = 'text', placeholder, required = false, icon, autoComplete } = Astro.props;
---

<div class="form-field modern-field" data-field={name}>
  <div class="input-container">
    {icon && (
      <span class="input-icon">
        <span class="icon-wrapper">{icon}</span>
      </span>
    )}
    <input
      type={type}
      id={name}
      name={name}
      class="form-input modern-input"
      placeholder=" "
      required={required}
      autocomplete={autoComplete}
      data-validate={type}
    />
    <label for={name} class="floating-label">
      {label}
      {required && <span class="required">*</span>}
    </label>
    <div class="input-border"></div>
    
    <!-- Validation Feedback -->
    <div class="validation-feedback">
      <svg class="validation-icon valid-icon" viewBox="0 0 20 20" fill="currentColor">
        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
      </svg>
      <svg class="validation-icon invalid-icon" viewBox="0 0 20 20" fill="currentColor">
        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
      </svg>
    </div>
  </div>
  <div class="field-helper">
    <span class="helper-text"></span>
    <span class="character-count"></span>
  </div>
</div>

<style>
  @import '../../styles/form-animations.css';
  
  .form-field {
    margin-bottom: 1.75rem;
    position: relative;
  }
  
  .modern-field {
    --field-height: 60px;
    --icon-size: 20px;
    --border-width: 2px;
  }
  
  .input-container {
    position: relative;
    width: 100%;
  }
  
  /* Modern Input Styling */
  .modern-input {
    width: 100%;
    height: var(--field-height);
    padding: 1.375rem 1.25rem 0.625rem;
    background: rgba(255, 255, 255, 0.03);
    border: var(--border-width) solid var(--border-input);
    border-radius: var(--radius-input);
    font-size: var(--text-base);
    font-weight: var(--font-normal);
    color: var(--text-primary);
    transition: all var(--transition-fluid);
    backdrop-filter: blur(12px);
    -webkit-backdrop-filter: blur(12px);
    box-shadow: var(--shadow-sm);
  }
  
  .input-container:has(.input-icon) .modern-input {
    padding-left: 3.5rem;
  }
  
  /* Floating Label */
  .floating-label {
    position: absolute;
    left: 1rem;
    top: 50%;
    transform: translateY(-50%);
    font-size: 1rem;
    font-weight: 500;
    color: var(--text-secondary);
    pointer-events: none;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    background: transparent;
    padding: 0 0.25rem;
  }
  
  .input-container:has(.input-icon) .floating-label {
    left: 3.5rem;
  }
  
  .modern-input:focus ~ .floating-label,
  .modern-input:not(:placeholder-shown) ~ .floating-label {
    top: 0.75rem;
    transform: translateY(0);
    font-size: 0.75rem;
    color: var(--accent-500);
    background: linear-gradient(to bottom, 
      transparent 0%, 
      transparent 40%,
      rgba(10, 10, 10, 0.95) 40%,
      rgba(10, 10, 10, 0.95) 60%,
      transparent 60%,
      transparent 100%
    );
    font-weight: 600;
    letter-spacing: 0.025em;
  }
  
  .required {
    color: var(--accent-500);
    margin-left: 0.125rem;
  }
  
  /* Icon Styling */
  .input-icon {
    position: absolute;
    left: 1rem;
    top: 50%;
    transform: translateY(-50%);
    z-index: 1;
    transition: all 0.3s ease;
  }
  
  .icon-wrapper {
    display: flex;
    align-items: center;
    justify-content: center;
    width: var(--icon-size);
    height: var(--icon-size);
    font-size: 1.25rem;
    color: var(--text-secondary);
    transition: all 0.3s ease;
  }
  
  .modern-input:focus ~ .input-icon .icon-wrapper {
    color: var(--accent-500);
    transform: scale(1.1);
  }
  
  /* Animated Border */
  .input-border {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: var(--border-width);
    background: linear-gradient(90deg, var(--accent-500), var(--secondary-500));
    transform: scaleX(0);
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    border-radius: 0 0 12px 12px;
  }
  
  .modern-input:focus ~ .input-border {
    transform: scaleX(1);
  }
  
  /* Hover and Focus States */
  .modern-input:hover {
    border-color: var(--border-hover);
    background: var(--bg-hover);
    box-shadow: var(--shadow-md);
    transform: translateY(-1px);
  }
  
  .modern-input:focus {
    outline: none;
    border-color: var(--border-focus);
    background: var(--bg-active);
    box-shadow: 
      0 0 0 4px rgba(0, 212, 170, 0.12),
      var(--shadow-lg);
    transform: translateY(-3px);
  }
  
  /* Validation States */
  .validation-feedback {
    position: absolute;
    right: 1rem;
    top: 50%;
    transform: translateY(-50%);
    opacity: 0;
    transition: all 0.3s ease;
  }
  
  .validation-icon {
    width: 20px;
    height: 20px;
    display: none;
  }
  
  .valid-icon {
    color: var(--accent-500);
  }
  
  .invalid-icon {
    color: #EF4444;
  }
  
  /* Valid State */
  .modern-field.valid .modern-input {
    border-color: rgba(0, 242, 169, 0.3);
    background: rgba(0, 242, 169, 0.03);
  }
  
  .modern-field.valid .validation-feedback {
    opacity: 1;
  }
  
  .modern-field.valid .valid-icon {
    display: block;
    animation: successPulse 0.4s ease-out;
  }
  
  .modern-field.valid .floating-label {
    color: var(--accent-500);
  }
  
  /* Invalid State */
  .modern-field.invalid .modern-input {
    border-color: rgba(239, 68, 68, 0.3);
    background: rgba(239, 68, 68, 0.03);
    animation: errorShake 0.5s ease-out;
  }
  
  .modern-field.invalid .validation-feedback {
    opacity: 1;
  }
  
  .modern-field.invalid .invalid-icon {
    display: block;
  }
  
  .modern-field.invalid .floating-label {
    color: #EF4444;
  }
  
  /* Helper Text */
  .field-helper {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 0.5rem;
    min-height: 1.25rem;
  }
  
  .helper-text {
    font-size: 0.75rem;
    color: var(--text-secondary);
    transition: color 0.3s ease;
  }
  
  .modern-field.invalid .helper-text {
    color: #EF4444;
  }
  
  .character-count {
    font-size: 0.75rem;
    color: var(--text-muted);
  }
  
  /* Placeholder */
  .modern-input::placeholder {
    color: transparent;
  }
  
  /* Autofill Styling */
  .modern-input:-webkit-autofill,
  .modern-input:-webkit-autofill:hover,
  .modern-input:-webkit-autofill:focus {
    -webkit-text-fill-color: var(--text-primary);
    -webkit-box-shadow: 0 0 0px 1000px rgba(13, 13, 13, 0.95) inset;
    transition: background-color 5000s ease-in-out 0s;
  }
  
  /* Loading State */
  .modern-field.loading .modern-input {
    background-image: linear-gradient(
      90deg,
      rgba(255, 255, 255, 0) 0%,
      rgba(255, 255, 255, 0.05) 50%,
      rgba(255, 255, 255, 0) 100%
    );
    background-size: 200% 100%;
    animation: shimmer 1.5s infinite;
  }
  
  /* Disabled State */
  .modern-input:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    background: rgba(255, 255, 255, 0.01);
  }
  
  .modern-input:disabled ~ .floating-label {
    opacity: 0.5;
  }
  
  /* Dark Mode Optimizations */
  @media (prefers-color-scheme: dark) {
    .modern-input {
      background: rgba(255, 255, 255, 0.03);
    }
  }
  
  /* Mobile Optimizations */
  @media (max-width: 640px) {
    .modern-field {
      --field-height: 52px;
    }
    
    .modern-input {
      font-size: 16px; /* Prevents zoom on iOS */
    }
  }
  
  /* Reduced Motion */
  @media (prefers-reduced-motion: reduce) {
    .modern-input,
    .floating-label,
    .input-border,
    .validation-feedback,
    .icon-wrapper {
      transition: none;
    }
    
    .modern-field.invalid .modern-input {
      animation: none;
    }
  }
</style>