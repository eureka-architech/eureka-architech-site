---
export interface Props {
  label: string;
  name: string;
  options: Array<{ value: string; text: string }>;
  required?: boolean;
  placeholder?: string;
}

const { label, name, options, required = false, placeholder } = Astro.props;
---

<div class="form-group">
  <label for={name} class="form-label">
    {label}
    {required && <span class="required">*</span>}
  </label>
  <select
    id={name}
    name={name}
    class="form-select"
    required={required}
  >
    {placeholder && <option value="">{placeholder}</option>}
    {options.map(option => (
      <option value={option.value}>{option.text}</option>
    ))}
  </select>
</div>

<style>
  .form-group {
    margin-bottom: var(--space-4);
  }

  .form-label {
    display: block;
    font-size: var(--text-sm);
    font-weight: 500;
    color: var(--text-primary);
    margin-bottom: var(--space-2);
  }

  .required {
    color: var(--accent-primary);
  }

  .form-select {
    width: 100%;
    padding: var(--space-3) var(--space-4);
    background: var(--bg-primary);
    border: 1px solid var(--border-primary);
    border-radius: var(--radius-lg);
    font-size: var(--text-base);
    color: var(--text-primary);
    transition: all 0.2s ease;
    appearance: none;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' viewBox='0 0 12 12'%3E%3Cpath fill='%236B7280' d='M6 9L1 4h10z'/%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: right var(--space-3) center;
    padding-right: 2.5rem;
  }

  .form-select:focus {
    outline: none;
    border-color: var(--accent-primary);
    box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);
  }
</style>