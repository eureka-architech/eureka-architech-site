---
export interface Props {
  text: string;
  type?: 'button' | 'submit';
  variant?: 'primary' | 'secondary' | 'ghost';
  onClick?: string;
  disabled?: boolean;
  fullWidth?: boolean;
  icon?: string;
  iconPosition?: 'left' | 'right';
}

const { 
  text, 
  type = 'button', 
  variant = 'primary', 
  onClick, 
  disabled = false, 
  fullWidth = false,
  icon,
  iconPosition = 'right'
} = Astro.props;
---

<button
  type={type}
  class={`modern-button modern-button--${variant} ${fullWidth ? 'modern-button--full' : ''} ripple-container`}
  onclick={onClick}
  disabled={disabled}
  data-text={text}
>
  <span class="button-content">
    {icon && iconPosition === 'left' && (
      <span class="button-icon button-icon--left">
        {icon === 'arrow' ? (
          <svg class="icon-arrow" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
          </svg>
        ) : icon}
      </span>
    )}
    
    <span class="button-text">{text}</span>
    
    {icon && iconPosition === 'right' && (
      <span class="button-icon button-icon--right">
        {icon === 'arrow' ? (
          <svg class="icon-arrow" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
          </svg>
        ) : icon}
      </span>
    )}
  </span>
  
  <!-- Gradient overlay for hover effect -->
  <div class="button-overlay"></div>
  
  <!-- Loading spinner -->
  <div class="button-loader">
    <div class="spinner"></div>
  </div>
</button>

<style>
  @import '../../styles/form-animations.css';
  
  .modern-button {
    position: relative;
    padding: var(--space-4) var(--space-8);
    border-radius: var(--radius-button);
    font-size: var(--text-base);
    font-weight: var(--font-semibold);
    cursor: pointer;
    border: none;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: var(--space-2);
    overflow: hidden;
    transition: all var(--transition-natural);
    transform: translateZ(0);
    will-change: transform;
    letter-spacing: 0.025em;
    min-height: 3rem;
  }
  
  .modern-button--full {
    width: 100%;
  }
  
  /* Button Content */
  .button-content {
    position: relative;
    z-index: 2;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    transition: transform 0.3s ease;
  }
  
  .button-text {
    transition: all 0.3s ease;
  }
  
  /* Icons */
  .button-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    transition: transform 0.3s ease;
  }
  
  .icon-arrow {
    width: 16px;
    height: 16px;
  }
  
  .modern-button:hover .button-icon--right {
    transform: translateX(4px);
  }
  
  .modern-button:hover .button-icon--left {
    transform: translateX(-4px);
  }
  
  /* Primary Variant */
  .modern-button--primary {
    background: linear-gradient(135deg, var(--emerald-500), var(--sapphire-500));
    color: var(--text-inverse);
    font-weight: var(--font-bold);
    box-shadow: var(--shadow-accent);
  }
  
  .modern-button--primary::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
    transition: left 0.6s ease;
  }
  
  .modern-button--primary:hover::before {
    left: 100%;
  }
  
  .modern-button--primary:hover {
    transform: translateY(-3px) scale(1.02);
    box-shadow: var(--shadow-accent-lg);
  }
  
  .modern-button--primary:active {
    transform: translateY(-1px) scale(0.98);
    box-shadow: var(--shadow-accent);
  }
  
  /* Secondary Variant */
  .modern-button--secondary {
    background: rgba(255, 255, 255, 0.05);
    color: var(--text-primary);
    border: 2px solid rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
  }
  
  .modern-button--secondary:hover {
    background: rgba(255, 255, 255, 0.1);
    border-color: rgba(0, 242, 169, 0.3);
    color: var(--accent-500);
    transform: translateY(-2px);
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
  }
  
  /* Ghost Variant */
  .modern-button--ghost {
    background: transparent;
    color: var(--text-secondary);
    border: none;
    padding: 0.75rem 1.5rem;
  }
  
  .modern-button--ghost:hover {
    color: var(--accent-500);
    background: rgba(0, 242, 169, 0.1);
  }
  
  /* Overlay Effect */
  .button-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(circle at center, transparent 0%, rgba(255, 255, 255, 0.1) 100%);
    opacity: 0;
    transition: opacity 0.3s ease;
    pointer-events: none;
  }
  
  .modern-button:hover .button-overlay {
    opacity: 1;
  }
  
  /* Ripple Effect */
  .modern-button::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.5);
    transform: translate(-50%, -50%);
    transition: width 0.6s, height 0.6s;
  }
  
  .modern-button:active::after {
    width: 300px;
    height: 300px;
  }
  
  /* Loading State */
  .button-loader {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    opacity: 0;
    transition: opacity 0.3s ease;
    pointer-events: none;
  }
  
  .modern-button.loading .button-loader {
    opacity: 1;
  }
  
  .modern-button.loading .button-content {
    opacity: 0;
    transform: scale(0.9);
  }
  
  .spinner {
    width: 20px;
    height: 20px;
    border: 2px solid rgba(255, 255, 255, 0.3);
    border-top-color: currentColor;
    border-radius: 50%;
    animation: spin 0.8s linear infinite;
  }
  
  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }
  
  /* Success State */
  .modern-button.success {
    background: linear-gradient(135deg, #10B981, #059669);
    pointer-events: none;
  }
  
  .modern-button.success .button-content::before {
    content: 'âœ“';
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    font-size: 1.5rem;
    animation: successPulse 0.6s ease-out;
  }
  
  .modern-button.success .button-text {
    opacity: 0;
  }
  
  /* Disabled State */
  .modern-button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    transform: none !important;
    box-shadow: none !important;
  }
  
  .modern-button:disabled:hover {
    transform: none;
  }
  
  /* Focus State */
  .modern-button:focus {
    outline: none;
    box-shadow: 
      0 0 0 3px rgba(0, 242, 169, 0.2),
      0 4px 16px rgba(0, 242, 169, 0.2);
  }
  
  /* Pulse Animation for CTAs */
  .modern-button--primary.pulse {
    animation: pulseGlow 2s infinite;
  }
  
  /* Mobile Optimizations */
  @media (max-width: 640px) {
    .modern-button {
      padding: 0.875rem 1.5rem;
      font-size: 0.9375rem;
    }
  }
  
  /* Reduced Motion */
  @media (prefers-reduced-motion: reduce) {
    .modern-button,
    .button-content,
    .button-icon,
    .button-overlay,
    .modern-button::before,
    .modern-button::after {
      transition: none;
      animation: none;
    }
    
    .modern-button:hover {
      transform: none;
    }
  }
</style>