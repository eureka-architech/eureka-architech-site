---
export interface Props {
  variant?: 'primary' | 'secondary' | 'ghost';
  size?: 'sm' | 'base' | 'lg';
  href?: string;
  type?: 'button' | 'submit' | 'reset';
  disabled?: boolean;
  class?: string;
  onClick?: string;
}

const {
  variant = 'primary',
  size = 'base',
  href,
  type = 'button',
  disabled = false,
  class: className = '',
  onClick
} = Astro.props;

const baseClasses = 'btn hover-lift';
const variantClasses = `btn-${variant}`;
const sizeClasses = `btn-${size}`;
const combinedClasses = `${baseClasses} ${variantClasses} ${sizeClasses} ${className}`;

const Element = href ? 'a' : 'button';
---

<Element 
  class={combinedClasses}
  href={href}
  type={!href ? type : undefined}
  disabled={!href ? disabled : undefined}
  onclick={onClick}
  {...Astro.props}
>
  <slot />
</Element>

<style>
  /* Ripple effect for enhanced interactivity */
  .btn {
    position: relative;
    overflow: hidden;
  }
  
  .btn::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.3);
    transform: translate(-50%, -50%);
    transition: width 0.6s, height 0.6s;
  }
  
  .btn:active::before {
    width: 300px;
    height: 300px;
  }
  
  /* Enhanced accessibility */
  .btn:focus-visible {
    outline: 2px solid var(--accent-500);
    outline-offset: 2px;
  }
  
  .btn:disabled {
    cursor: not-allowed;
    opacity: 0.6;
    transform: none !important;
  }
</style>